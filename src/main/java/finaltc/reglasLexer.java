// Generated from c:/Users/Agux/Desktop/DefinitivoTC/finaltc/src/main/java/finaltc/reglas.g4 by ANTLR 4.13.1

package finaltc;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class reglasLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		LLAVEA=1, LLAVEC=2, PARENA=3, PARENC=4, INT=5, DOUBLE=6, VOID=7, FLOAT=8, 
		WHILE=9, IIF=10, IElse=11, IFOR=12, MAS=13, MENOS=14, MULT=15, DIV=16, 
		MENOR=17, MAYOR=18, MENORIGUAL=19, MAYORIGUAL=20, IGUALES=21, DISTINTO=22, 
		INCREMENTO=23, DECREMENTO=24, ASIG=25, PYC=26, COMA=27, OR=28, AND=29, 
		NOT=30, TRUE=31, FALSE=32, RETURN=33, ENTERO=34, ID=35, WS=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LETRA", "DIGITO", "LLAVEA", "LLAVEC", "PARENA", "PARENC", "INT", "DOUBLE", 
			"VOID", "FLOAT", "WHILE", "IIF", "IElse", "IFOR", "MAS", "MENOS", "MULT", 
			"DIV", "MENOR", "MAYOR", "MENORIGUAL", "MAYORIGUAL", "IGUALES", "DISTINTO", 
			"INCREMENTO", "DECREMENTO", "ASIG", "PYC", "COMA", "OR", "AND", "NOT", 
			"TRUE", "FALSE", "RETURN", "ENTERO", "ID", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "'}'", "'('", "')'", "'int'", "'double'", "'void'", "'float'", 
			"'while'", "'if'", "'else'", "'for'", "'+'", "'-'", "'*'", "'/'", "'<'", 
			"'>'", "'<='", "'>='", "'=='", "'!='", "'++'", "'--'", "'='", "';'", 
			"','", "'||'", "'&&'", "'!'", "'true'", "'false'", "'return'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "LLAVEA", "LLAVEC", "PARENA", "PARENC", "INT", "DOUBLE", "VOID", 
			"FLOAT", "WHILE", "IIF", "IElse", "IFOR", "MAS", "MENOS", "MULT", "DIV", 
			"MENOR", "MAYOR", "MENORIGUAL", "MAYORIGUAL", "IGUALES", "DISTINTO", 
			"INCREMENTO", "DECREMENTO", "ASIG", "PYC", "COMA", "OR", "AND", "NOT", 
			"TRUE", "FALSE", "RETURN", "ENTERO", "ID", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public reglasLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "reglas.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000$\u00d7\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r"+
		"\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001"+
		"\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001 \u0001 \u0001"+
		"!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001\"\u0001\"\u0001\"\u0001\"\u0001"+
		"\"\u0001\"\u0001\"\u0001#\u0004#\u00c1\b#\u000b#\f#\u00c2\u0001$\u0001"+
		"$\u0003$\u00c7\b$\u0001$\u0001$\u0001$\u0005$\u00cc\b$\n$\f$\u00cf\t$"+
		"\u0001%\u0004%\u00d2\b%\u000b%\f%\u00d3\u0001%\u0001%\u0000\u0000&\u0001"+
		"\u0000\u0003\u0000\u0005\u0001\u0007\u0002\t\u0003\u000b\u0004\r\u0005"+
		"\u000f\u0006\u0011\u0007\u0013\b\u0015\t\u0017\n\u0019\u000b\u001b\f\u001d"+
		"\r\u001f\u000e!\u000f#\u0010%\u0011\'\u0012)\u0013+\u0014-\u0015/\u0016"+
		"1\u00173\u00185\u00197\u001a9\u001b;\u001c=\u001d?\u001eA\u001fC E!G\""+
		"I#K$\u0001\u0000\u0003\u0002\u0000AZaz\u0001\u000009\u0003\u0000\t\n\r"+
		"\r  \u00da\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0001M\u0001\u0000\u0000\u0000\u0003"+
		"O\u0001\u0000\u0000\u0000\u0005Q\u0001\u0000\u0000\u0000\u0007S\u0001"+
		"\u0000\u0000\u0000\tU\u0001\u0000\u0000\u0000\u000bW\u0001\u0000\u0000"+
		"\u0000\rY\u0001\u0000\u0000\u0000\u000f]\u0001\u0000\u0000\u0000\u0011"+
		"d\u0001\u0000\u0000\u0000\u0013i\u0001\u0000\u0000\u0000\u0015o\u0001"+
		"\u0000\u0000\u0000\u0017u\u0001\u0000\u0000\u0000\u0019x\u0001\u0000\u0000"+
		"\u0000\u001b}\u0001\u0000\u0000\u0000\u001d\u0081\u0001\u0000\u0000\u0000"+
		"\u001f\u0083\u0001\u0000\u0000\u0000!\u0085\u0001\u0000\u0000\u0000#\u0087"+
		"\u0001\u0000\u0000\u0000%\u0089\u0001\u0000\u0000\u0000\'\u008b\u0001"+
		"\u0000\u0000\u0000)\u008d\u0001\u0000\u0000\u0000+\u0090\u0001\u0000\u0000"+
		"\u0000-\u0093\u0001\u0000\u0000\u0000/\u0096\u0001\u0000\u0000\u00001"+
		"\u0099\u0001\u0000\u0000\u00003\u009c\u0001\u0000\u0000\u00005\u009f\u0001"+
		"\u0000\u0000\u00007\u00a1\u0001\u0000\u0000\u00009\u00a3\u0001\u0000\u0000"+
		"\u0000;\u00a5\u0001\u0000\u0000\u0000=\u00a8\u0001\u0000\u0000\u0000?"+
		"\u00ab\u0001\u0000\u0000\u0000A\u00ad\u0001\u0000\u0000\u0000C\u00b2\u0001"+
		"\u0000\u0000\u0000E\u00b8\u0001\u0000\u0000\u0000G\u00c0\u0001\u0000\u0000"+
		"\u0000I\u00c6\u0001\u0000\u0000\u0000K\u00d1\u0001\u0000\u0000\u0000M"+
		"N\u0007\u0000\u0000\u0000N\u0002\u0001\u0000\u0000\u0000OP\u0007\u0001"+
		"\u0000\u0000P\u0004\u0001\u0000\u0000\u0000QR\u0005{\u0000\u0000R\u0006"+
		"\u0001\u0000\u0000\u0000ST\u0005}\u0000\u0000T\b\u0001\u0000\u0000\u0000"+
		"UV\u0005(\u0000\u0000V\n\u0001\u0000\u0000\u0000WX\u0005)\u0000\u0000"+
		"X\f\u0001\u0000\u0000\u0000YZ\u0005i\u0000\u0000Z[\u0005n\u0000\u0000"+
		"[\\\u0005t\u0000\u0000\\\u000e\u0001\u0000\u0000\u0000]^\u0005d\u0000"+
		"\u0000^_\u0005o\u0000\u0000_`\u0005u\u0000\u0000`a\u0005b\u0000\u0000"+
		"ab\u0005l\u0000\u0000bc\u0005e\u0000\u0000c\u0010\u0001\u0000\u0000\u0000"+
		"de\u0005v\u0000\u0000ef\u0005o\u0000\u0000fg\u0005i\u0000\u0000gh\u0005"+
		"d\u0000\u0000h\u0012\u0001\u0000\u0000\u0000ij\u0005f\u0000\u0000jk\u0005"+
		"l\u0000\u0000kl\u0005o\u0000\u0000lm\u0005a\u0000\u0000mn\u0005t\u0000"+
		"\u0000n\u0014\u0001\u0000\u0000\u0000op\u0005w\u0000\u0000pq\u0005h\u0000"+
		"\u0000qr\u0005i\u0000\u0000rs\u0005l\u0000\u0000st\u0005e\u0000\u0000"+
		"t\u0016\u0001\u0000\u0000\u0000uv\u0005i\u0000\u0000vw\u0005f\u0000\u0000"+
		"w\u0018\u0001\u0000\u0000\u0000xy\u0005e\u0000\u0000yz\u0005l\u0000\u0000"+
		"z{\u0005s\u0000\u0000{|\u0005e\u0000\u0000|\u001a\u0001\u0000\u0000\u0000"+
		"}~\u0005f\u0000\u0000~\u007f\u0005o\u0000\u0000\u007f\u0080\u0005r\u0000"+
		"\u0000\u0080\u001c\u0001\u0000\u0000\u0000\u0081\u0082\u0005+\u0000\u0000"+
		"\u0082\u001e\u0001\u0000\u0000\u0000\u0083\u0084\u0005-\u0000\u0000\u0084"+
		" \u0001\u0000\u0000\u0000\u0085\u0086\u0005*\u0000\u0000\u0086\"\u0001"+
		"\u0000\u0000\u0000\u0087\u0088\u0005/\u0000\u0000\u0088$\u0001\u0000\u0000"+
		"\u0000\u0089\u008a\u0005<\u0000\u0000\u008a&\u0001\u0000\u0000\u0000\u008b"+
		"\u008c\u0005>\u0000\u0000\u008c(\u0001\u0000\u0000\u0000\u008d\u008e\u0005"+
		"<\u0000\u0000\u008e\u008f\u0005=\u0000\u0000\u008f*\u0001\u0000\u0000"+
		"\u0000\u0090\u0091\u0005>\u0000\u0000\u0091\u0092\u0005=\u0000\u0000\u0092"+
		",\u0001\u0000\u0000\u0000\u0093\u0094\u0005=\u0000\u0000\u0094\u0095\u0005"+
		"=\u0000\u0000\u0095.\u0001\u0000\u0000\u0000\u0096\u0097\u0005!\u0000"+
		"\u0000\u0097\u0098\u0005=\u0000\u0000\u00980\u0001\u0000\u0000\u0000\u0099"+
		"\u009a\u0005+\u0000\u0000\u009a\u009b\u0005+\u0000\u0000\u009b2\u0001"+
		"\u0000\u0000\u0000\u009c\u009d\u0005-\u0000\u0000\u009d\u009e\u0005-\u0000"+
		"\u0000\u009e4\u0001\u0000\u0000\u0000\u009f\u00a0\u0005=\u0000\u0000\u00a0"+
		"6\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005;\u0000\u0000\u00a28\u0001"+
		"\u0000\u0000\u0000\u00a3\u00a4\u0005,\u0000\u0000\u00a4:\u0001\u0000\u0000"+
		"\u0000\u00a5\u00a6\u0005|\u0000\u0000\u00a6\u00a7\u0005|\u0000\u0000\u00a7"+
		"<\u0001\u0000\u0000\u0000\u00a8\u00a9\u0005&\u0000\u0000\u00a9\u00aa\u0005"+
		"&\u0000\u0000\u00aa>\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005!\u0000"+
		"\u0000\u00ac@\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005t\u0000\u0000\u00ae"+
		"\u00af\u0005r\u0000\u0000\u00af\u00b0\u0005u\u0000\u0000\u00b0\u00b1\u0005"+
		"e\u0000\u0000\u00b1B\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005f\u0000"+
		"\u0000\u00b3\u00b4\u0005a\u0000\u0000\u00b4\u00b5\u0005l\u0000\u0000\u00b5"+
		"\u00b6\u0005s\u0000\u0000\u00b6\u00b7\u0005e\u0000\u0000\u00b7D\u0001"+
		"\u0000\u0000\u0000\u00b8\u00b9\u0005r\u0000\u0000\u00b9\u00ba\u0005e\u0000"+
		"\u0000\u00ba\u00bb\u0005t\u0000\u0000\u00bb\u00bc\u0005u\u0000\u0000\u00bc"+
		"\u00bd\u0005r\u0000\u0000\u00bd\u00be\u0005n\u0000\u0000\u00beF\u0001"+
		"\u0000\u0000\u0000\u00bf\u00c1\u0003\u0003\u0001\u0000\u00c0\u00bf\u0001"+
		"\u0000\u0000\u0000\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2\u00c0\u0001"+
		"\u0000\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c3H\u0001\u0000"+
		"\u0000\u0000\u00c4\u00c7\u0003\u0001\u0000\u0000\u00c5\u00c7\u0005_\u0000"+
		"\u0000\u00c6\u00c4\u0001\u0000\u0000\u0000\u00c6\u00c5\u0001\u0000\u0000"+
		"\u0000\u00c7\u00cd\u0001\u0000\u0000\u0000\u00c8\u00cc\u0003\u0001\u0000"+
		"\u0000\u00c9\u00cc\u0003\u0003\u0001\u0000\u00ca\u00cc\u0005_\u0000\u0000"+
		"\u00cb\u00c8\u0001\u0000\u0000\u0000\u00cb\u00c9\u0001\u0000\u0000\u0000"+
		"\u00cb\u00ca\u0001\u0000\u0000\u0000\u00cc\u00cf\u0001\u0000\u0000\u0000"+
		"\u00cd\u00cb\u0001\u0000\u0000\u0000\u00cd\u00ce\u0001\u0000\u0000\u0000"+
		"\u00ceJ\u0001\u0000\u0000\u0000\u00cf\u00cd\u0001\u0000\u0000\u0000\u00d0"+
		"\u00d2\u0007\u0002\u0000\u0000\u00d1\u00d0\u0001\u0000\u0000\u0000\u00d2"+
		"\u00d3\u0001\u0000\u0000\u0000\u00d3\u00d1\u0001\u0000\u0000\u0000\u00d3"+
		"\u00d4\u0001\u0000\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000\u0000\u00d5"+
		"\u00d6\u0006%\u0000\u0000\u00d6L\u0001\u0000\u0000\u0000\u0006\u0000\u00c2"+
		"\u00c6\u00cb\u00cd\u00d3\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}